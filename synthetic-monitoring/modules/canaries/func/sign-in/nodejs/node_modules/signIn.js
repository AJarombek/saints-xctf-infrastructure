/**
 * AWS Synthetic Monitoring Canary function for testing a sign in operation on SaintsXCTF.
 * @author Andrew Jarombek
 * @since 6/20/2021
 */

const synthetics = require('Synthetics');
const log = require('SyntheticsLogger');
const AWS = require('aws-sdk');

const secretsManager = new AWS.SecretsManager();

const getCredentials = async () => {
    const params = {
        SecretId: 'saints-xctf-andy-password'
    }

    const secret = await secretsManager.getSecretValue(params).promise();
    const { password } = JSON.parse(secret.SecretString);
    return password;
}

const signInUser = async () => {
    log.info('Starting saints-xctf-sign-in canary.');
    const page = await synthetics.getPage();
    const response = await page.goto('https://saintsxctf.com/signin', {waitUntil: 'domcontentloaded', timeout: 30000});

    try {
        if (!response) {
            throw 'Failed to load SaintsXCTF, the website might be down.'
        }
    } finally {
        await synthetics.takeScreenshot('loaded', 'result');
    }

    const password = await getCredentials();
    await page.type('.sxctf-image-input input[name="username"]', 'andy');
    await page.type('.sxctf-image-input input[name="password"]', password);

    await synthetics.takeScreenshot('credentials', 'entered');

    const [button] = await page.$x("//button[contains(., 'Sign In')]");

    if (button) {
        await button.click();
        await synthetics.takeScreenshot('button', 'clicked');

        await page.waitForSelector('.logFeed');
        await synthetics.takeScreenshot('dashboard', 'loaded');
    } else {
        await synthetics.takeScreenshot('no', 'button');
        throw "SaintsXCTF 'Sign In' button not found."
    }
}

exports.handler = async () => {
    return await signInUser();
}