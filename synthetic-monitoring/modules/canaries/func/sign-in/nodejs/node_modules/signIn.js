/**
 * AWS Synthetic Monitoring Canary function for testing a sign in operation on SaintsXCTF.
 * @author Andrew Jarombek
 * @since 6/20/2021
 */

const synthetics = require('Synthetics');
const log = require('SyntheticsLogger');
const AWS = require('aws-sdk');

const secretsManager = new AWS.SecretsManager();

const synConfig = synthetics.getConfiguration();

synConfig.setConfig({
    screenshotOnStepStart: true,
    screenshotOnStepSuccess: false,
    screenshotOnStepFailure: true
});

const getCredentials = async () => {
    const params = {
        SecretId: 'saints-xctf-andy-password'
    }

    const secret = await secretsManager.getSecretValue(params).promise();
    const { password } = JSON.parse(secret.SecretString);
    return password;
}

const signInUser = async () => {
    log.info('Starting saints-xctf-sign-in canary.');
    const page = await synthetics.getPage();
    const response = await page.goto('https://saintsxctf.com/signin', {waitUntil: 'domcontentloaded', timeout: 30000});

    if (!response) {
        await synthetics.takeScreenshot('failed', 'load');
        throw 'Failed to load SaintsXCTF, the website might be down.'
    }

    await synthetics.executeStep('enter_credentials', async () => {
        const password = await getCredentials();
        await page.type('.sxctf-image-input input[name="username"]', 'andy');
        await page.type('.sxctf-image-input input[name="password"]', password);
    });

    await synthetics.executeStep('sign_in', async () => {
        await page.waitForSelector('.sxctf-sign-in-body .aj-contained-button > button');
        await page.click('.sxctf-sign-in-body .aj-contained-button > button');
    });

    await synthetics.executeStep('profile_page_click', async () => {
        await page.waitForSelector('#dashboardSidePanel > .accordion:nth-child(1) > div');
        await page.click('#dashboardSidePanel > .accordion:nth-child(1) > div');
    });

    await synthetics.executeStep('profile_page_view', async () => {
        await page.waitForSelector('.pictureTitleContainer');
    });
}

exports.handler = async () => {
    return await signInUser();
}